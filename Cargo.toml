[package]
name = "rustation-wasm"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib"]
path = "src/wasm_unified.rs"

[features]
default = []
pgxp = []
debugger = []
ghidra = ["debugger", "chrono", "serde_json"]
compatibility-db = ["rusqlite", "chrono", "uuid"]
online-sync = ["reqwest", "tokio", "compatibility-db"]
cloud-sync = ["reqwest", "tokio", "async-trait", "ring", "uuid", "chrono"]
vulkan-renderer = []
vulkan = ["ash", "shaderc", "spirv-reflect"]
opengl = ["gl"]
netplay = ["tokio", "quinn", "webrtc", "igd"]
fightcade = ["netplay"]
tracy = ["dep:tracy-client"]
optick = ["dep:optick"]
discord-rpc = ["discord-rich-presence", "tokio"]
game-library = ["rusqlite", "chrono", "uuid", "regex"]
game-library-online = ["game-library", "reqwest", "tokio", "async-trait"]
streaming = ["ffmpeg-next", "opus", "x264", "websocket", "v4l", "cpal"]
ai-frame-generation = ["ort", "ndarray", "half", "imageproc", "memmap2", "crossbeam"]
cloud-gaming = ["webrtc", "tokio", "futures", "bytes", "rand", "stun_codec", "turn", "ice"]
sunshine = ["streaming", "tokio", "async-trait", "rustls", "webpki"]
memory-forensics = ["mlua", "keystone"]
mod-support = ["mlua", "notify", "semver"]

[dependencies]
wasm-bindgen = "0.2"
js-sys = "0.3"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
log = "0.4"
wasm-logger = "0.2"
bitflags = "2.4"
arrayvec = "0.7"
lazy_static = "1.4"
bincode = "1.3"
flate2 = "1.0"
serde-big-array = "0.5"
# Texture replacement dependencies  
sha2 = "0.10"
image = "0.24"
zip = "0.6"

# Database and compatibility dependencies
rusqlite = { version = "0.30", features = ["bundled", "serde_json"], optional = true }
chrono = { version = "0.4", features = ["serde"], optional = true }
uuid = { version = "1.6", features = ["v4", "serde"], optional = true }
reqwest = { version = "0.11", features = ["json", "blocking"], optional = true }
tokio = { version = "1", features = ["rt", "macros", "net", "sync", "time", "rt-multi-thread"], optional = true }
regex = { version = "1.10", optional = true }
async-trait = { version = "0.1", optional = true }
flexbuffers = "25.2.10"
toml = "0.8"
dirs = "5.0"

# Shader compilation dependencies
crossbeam-channel = "0.5"
hex = "0.4"
num_cpus = "1.16"
libc = "0.2"

# Testing dependencies
backtrace = "0.3"

# Rewind system dependencies
zstd = "0.13"
crc32fast = "1.3"
fastrand = "2.0"

# Save state compression dependencies
lz4 = "1.24"

# Additional save state dependencies
parking_lot = "0.12"
rayon = "1.7"
base64 = "0.21"

# Patching system dependencies
md5 = "0.7"


# GGPO Netplay dependencies and Cloud sync
ring = { version = "0.17", optional = true }
quinn = { version = "0.10", optional = true }
webrtc = { version = "0.9", optional = true }
igd = { version = "0.12", optional = true }
stun_codec = { version = "0.3", optional = true }
dashmap = "5.5"
bytes = "1.5"
futures = "0.3"

# Vulkan dependencies
ash = { version = "0.37", optional = true }
shaderc = { version = "0.8", optional = true }
spirv-reflect = { version = "0.2", optional = true }

# OpenGL dependencies
gl = { version = "0.14", optional = true }

# Memory forensics dependencies
xml-rs = "0.8"
pest = "2.7"
pest_derive = "2.7"
capstone = "0.11"
keystone = { version = "0.9", optional = true }

# Mod support dependencies
mlua = { version = "0.9", features = ["lua54", "vendored", "serialize", "async"], optional = true }
notify = { version = "6.1", optional = true }
semver = { version = "1.0", optional = true }

# Dear ImGui dependencies
imgui = "0.11"
imgui-wgpu = "0.24"
imgui-winit-support = "0.11"
imgui-sys = "0.11"
glium = { version = "0.32", optional = true }
imgui-glium-renderer = { version = "0.11", optional = true }
winit = "0.28"
wgpu = "0.19"
pollster = "0.3"

# Additional UI dependencies
strum = { version = "0.25", features = ["derive"] }
strum_macros = "0.25"
rfd = { version = "0.12", optional = true }  # Native file dialogs
egui = { version = "0.26", optional = true }
egui-wgpu = { version = "0.26", optional = true }
egui-winit = { version = "0.26", optional = true }

# Compression dependencies for ZRAM
lz4_flex = "0.11"
md5 = "0.7"
# External profiler dependencies
tracy-client = { version = "0.16", optional = true }
optick = { version = "1.3.4", optional = true }

# Discord Rich Presence dependencies
discord-rich-presence = { version = "0.2", optional = true }

# Streaming dependencies
ffmpeg-next = { version = "6.0", optional = true }
opus = { version = "0.3", optional = true }
x264 = { version = "0.5", optional = true }
# librtmp = { version = "0.1", optional = true }  # Not available on crates.io
websocket = { version = "0.26", optional = true }
v4l = { version = "0.14", optional = true }
cpal = { version = "0.15", optional = true }

# AI Frame Generation dependencies
ort = { version = "2.0.0-rc.10", features = ["cuda", "tensorrt"], optional = true }
ndarray = { version = "0.15", optional = true }
half = { version = "2.3", features = ["serde"], optional = true }
imageproc = { version = "0.23", optional = true }
memmap2 = { version = "0.9", optional = true }
crossbeam = { version = "0.8", optional = true }

# Cloud Gaming dependencies
turn = { version = "0.6", optional = true }
ice = { version = "0.10", optional = true }
rand = { version = "0.8", optional = true }

# Sunshine server dependencies
rustls = { version = "0.21", optional = true }
webpki = { version = "0.22", optional = true }

# 3D Spatial Audio dependencies
rustfft = "6.1"
num-complex = "0.4"
hound = { version = "3.5", optional = true }
rubato = "0.14"
nalgebra = "0.32"

[dev-dependencies]
flexbuffers = "2.0"
tempfile = "3.8"

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
  "Document",
  "Element",
  "HtmlCanvasElement",
  "HtmlElement",
  "Window",
  "CanvasRenderingContext2d",
  "WebGl2RenderingContext",
  "WebGlProgram",
  "WebGlShader",
  "WebGlTexture",
  "WebGlBuffer",
  "WebGlUniformLocation",
  "ImageData",
  "KeyboardEvent",
  "MouseEvent",
  "TouchEvent",
  "Touch",
  "TouchList",
  "PointerEvent",
  "WheelEvent",
  "GamepadEvent",
  "AudioContext",
  "AudioBuffer",
  "AudioBufferSourceNode",
  "AudioDestinationNode",
  "AudioNode",
  "BaseAudioContext",
  "Gamepad",
  "GamepadButton",
  "Navigator",
  "Performance",
  "Storage",
  "IdbDatabase",
  "IdbObjectStore",
  "IdbRequest",
  "IdbTransaction",
  "IdbFactory",
  "ServiceWorkerRegistration",
  "ServiceWorkerContainer",
  "Worker",
  "MessagePort",
  "OffscreenCanvas",
  "Blob",
  "File",
  "FileReader",
  "Url",
  "UrlSearchParams",
  "Response",
  "RequestInit",
  "RequestMode",
  "Headers",
  "WorkerGlobalScope",
]

[profile.release]
opt-level = "s"
lto = true

[package.metadata.wasm-pack]
wasm-opt = false

